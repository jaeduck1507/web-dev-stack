DROP TABLE PLAYLIST_MUSIC;
DROP TABLE FAVORITE;
DROP TABLE PLAYLISTS;
DROP TABLE MUSICS;
DROP TABLE USER_INFO;

-- 유저 정보 테이블
CREATE TABLE USER_INFO(
	USER_ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_NAME VARCHAR(20) NOT NULL,
    USER_NICKNAME VARCHAR(20),
    PHONE VARCHAR(20),
    EMAIL VARCHAR(20) NOT NULL,
    JOIN_DATE DATE DEFAULT (CURRENT_DATE),
    USER_BIRTH DATE NOT NULL
);

-- 플레이리스트 테이블
CREATE TABLE PLAYLISTS(
	PLAYLIST_ID INT PRIMARY KEY AUTO_INCREMENT,
    PLAYLIST_TITLE VARCHAR(100) NOT NULL,
    PLAYLIST_DESC TEXT,
    THUMBNAIL VARCHAR(300),
    PLAYLIST_CODE VARCHAR(200) NOT NULL,
    THEME VARCHAR(50) CHECK(THEME IN ('DEF','봄','여름 등등')),
    CREATE_DATE DATE DEFAULT (CURRENT_DATE) NOT NULL,
    MODIFY_DATE DATE,
    USER_ID INT,
    FOREIGN KEY (USER_ID) REFERENCES USER_INFO(USER_ID)
);

-- 플레이리스트 추천 테이블
CREATE TABLE FAVORITE(
	FAV_ID INT PRIMARY KEY AUTO_INCREMENT,
    USER_ID INT,
    PLAYLIST_ID INT,
    FOREIGN KEY (USER_ID) REFERENCES USER_INFO(USER_ID),
    FOREIGN KEY (PLAYLIST_ID) REFERENCES PLAYLISTS(PLAYLIST_ID)
);

-- 음악(비디오) 테이블
CREATE TABLE MUSICS(
	MUSIC_ID INT PRIMARY KEY AUTO_INCREMENT,
    MUSIC_TITLE VARCHAR(100) NOT NULL,
    MUSIC_DESC TEXT,
    MUSIC_CODE VARCHAR(200),
    THUMBNAIL VARCHAR(300)
);

-- 음악이 어디 플레이리스트에 담긴지 표현하는 테이블
CREATE TABLE PLAYLIST_MUSIC(
	PM_ID INT PRIMARY KEY AUTO_INCREMENT,
    ADD_DATE DATE DEFAULT (CURRENT_DATE),
    PLAYLIST_ID INT,
    MUSIC_ID INT,
    FOREIGN KEY (PLAYLIST_ID) REFERENCES PLAYLISTS(PLAYLIST_ID),
    FOREIGN KEY (MUSIC_ID) REFERENCES MUSICS(MUSIC_ID)
);







